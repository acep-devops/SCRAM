include:
  - template: Dependency-Scanning.gitlab-ci.yml

stages:
  - lint
  - test

variables:
  POSTGRES_USER: 'scram'
  POSTGRES_PASSWORD: ''
  POSTGRES_DB: 'test_scram'
  POSTGRES_HOST_AUTH_METHOD: trust
  CELERY_BROKER_URL: 'redis://redis:6379/0'

flake8:
  stage: lint
  image: python:3.8-alpine
  before_script:
    - pip install -q flake8
  script:
    - flake8

pytest:
  stage: test
  variables:
    SHARED_PATH: $CI_PROJECT_DIR
  image: docker/compose:latest
  services:
    - docker:dind
  before_script:
    - docker-compose -f ci.yml build
    # Ensure celerybeat does not crash due to non-existent tables
    - docker-compose -f ci.yml run --rm django python manage.py migrate
    - docker-compose -f ci.yml up -d
  script:
    - docker-compose -f ci.yml run django pytest
  after_script:
    - docker-compose -f ci.yml rm -s -f

gemnasium-dependency_scanning:
  variables:
    PIP_REQUIREMENTS_FILE: requirements/base.txt
