---
- hosts: scram
  tasks:
    - block:
      - name: Create SCRAM group
        group:
          name: "{{ scram_user }}"
          state: present

      - name: Create SCRAM user
        user:
          name: "{{ scram_user }}"
          comment: "SCRAM User"
          group: "{{ scram_group }}"
          uid: "{{ scram_uid }}"
      when: '"mac" not in group_names and scram_install_user'

    - name: Remove old code
      file:
        state: absent
        path: "{{ scram_home }}"

    - name: Clone SCRAM repository
      git:
        repo: https://gitlab.es.net/security/scram.git
        dest: "{{ scram_home }}"
        version: "{{ scram_code_branch }}"
        force: true

    - block:
      - name: Create production .env files
        file:
          path: "{{ scram_home }}/.envs/.production"
          state: directory
          owner: "{{ scram_user }}"
          group: "{{ scram_group }}"

      - name: Deploy environment variable templates
        template:
          src: "ansible/{{ item }}.env.j2"
          dest: "{{ scram_home }}/.envs/.production/.{{ item }}"
          owner: "{{ scram_user }}"
          group: "{{ scram_group }}"
        loop:
          - django
          - postgres

      - name: Deploy traefik config file
        template:
          src: "ansible/traefik.yml.j2"
          dest: "{{ scram_home }}/compose/production/traefik/traefik.yml"
          owner: "{{ scram_user }}"
          group: "{{ scram_group }}"
      tags:
        - configs

    - name: Toggle prod
      make:
        chdir: "{{ scram_home }}"
        target: toggle-prod
      changed_when: false
      when: scram_prod

    - name: Toggle local
      make:
        chdir: "{{ scram_home }}"
        target: toggle-local
      changed_when: false
      when: not scram_prod

    - name: Turn off old containers
      make:
        chdir: "{{ scram_home }}"
        target: down
      failed_when: false

    - name: Build and start docker-compose stack
      make:
        chdir: "{{ scram_home }}"
        target: "{{ item }}"
      loop:
        - build
        - run

    - name: Run django migrations
      make:
        chdir: "{{ scram_home }}"
        target: migrate
      tags:
        - migrations

    - name: Grab the django URL
      make:
        chdir: "{{ scram_home }}"
        target: django-url
      register: django_url

    - name: Show django URL
      debug:
        var: django_url.stdout
